name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: write env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_SCHEMA=${{ secrets.DB_SCHEMA }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "KAFKA_BOOTSTRAP_SERVERS=${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}" >> .env

          
      - name: Set up and build Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR 
        id : login-ecr 
        uses : aws-actions/amazon-ecr-login@v1 

      - name : Build, tag, and push image to Amazon ECR 
        run : | 
            docker-compose push

      - name: Connect and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.WAS_HOST }}
          username: ec2-user
          key: ${{ secrets.PEM_KEY }}
          script: |
            docker stop $(docker ps -a -q) 
            docker rm $(docker ps -a -q)
            cd /home/ec2-user/
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 654654343720.dkr.ecr.ap-northeast-2.amazonaws.com
            docker-compose pull
            docker-compose up -d